{"version":3,"file":"static/js/571.d295e0e1.chunk.js","mappings":"sPACA,EAAuB,sBAAvB,EAAwD,0BAAxD,EAA6F,0BAA7F,EAAkI,0BAAlI,EAAoK,uB,SCiDpK,EA7CgB,WACd,IAqBIA,EArBJ,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsCR,OApCAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZJ,GAAW,GAFC,UAGcK,EAAAA,EAAAA,IAAgBJ,GAH9B,gBAGJK,EAHI,EAGJA,QACRR,EAAQQ,GACRN,GAAW,GALC,kDAOZO,QAAQC,IAAR,MAPY,yBASZR,GAAW,GATC,6EAAH,qDAYbI,GACD,GAAE,CAACH,IAIFN,EADEI,EACQ,aACDF,GAAQA,EAAKY,OAAS,GAE7B,gBAAKC,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGd,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,OAAQlB,EAAX,EAAWA,QAASmB,EAApB,EAAoBA,GAApB,OACR,gBAAaJ,UAAWC,EAAxB,WACE,cAAGD,UAAWC,EAAd,SAA6BE,IAC5BlB,GAAWA,IAFLmB,EADD,SAUN,cAAGJ,UAAWC,EAAd,SAAyB,sBAG9B,8BAAGhB,GACX,C,sLC9CKoB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qIAGoBN,EAASO,IAH7B,+CAGKzB,EAHL,EAGKA,KAHL,kBAIIA,EAAKS,SAJT,2HAUA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,kFACCU,EADD,iBACmBV,GADnB,kBAGoBC,EAASO,IAAIE,GAHjC,uBAGK3B,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BX,GAA5B,kFACCU,EADD,iBACmBV,EADnB,8BAGoBC,EAASO,IAAIE,GAHjC,uBAGK3B,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BS,GAA/B,kFACCU,EADD,iBACmBV,EADnB,8BAGoBC,EAASO,IAAIE,GAHjC,uBAGK3B,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCH,EADD,8BACgCG,GADhC,kBAGoBZ,EAASO,IAAIE,GAHjC,uBAGK3B,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__BCK8P\",\"listItem\":\"reviews_listItem__CMu1Z\",\"listWrap\":\"reviews_listWrap__+8d5B\",\"listName\":\"reviews_listName__7R8tH\",\"error\":\"reviews_error__3cS1r\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from '../../services/api';\nimport css from './reviews.module.css';\n\nconst Reviews = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setData(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  let content;\n  if (loading) {\n    content = 'Loading...';\n  } else if (data && data.length > 0) {\n    content = (\n      <div className={css.listWrap}>\n        <ul className={css.list}>\n          {data.map(({ author, content, id }) => (\n            <li key={id} className={css.listItem}>\n              <p className={css.listName}>{author}</p>\n              {content && content}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  } else {\n    content = <p className={css.error}>No reviews found</p>;\n  }\n\n  return <>{content}</>;\n};\n\nexport default Reviews;\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9760321e535cf92cb2afc4cf5f8389d8',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["content","useState","data","setData","loading","setLoading","movieId","useParams","useEffect","getData","getMovieReviews","results","console","log","length","className","css","map","author","id","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","getMovieDetails","query","getMovieCast","searchMovie","queryString"],"sourceRoot":""}