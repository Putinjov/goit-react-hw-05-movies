{"version":3,"file":"static/js/266.15c44b5b.chunk.js","mappings":"6PACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAqF,uBAArF,EAAuH,uBAAvH,EAA8J,4BAA9J,EAAqM,uBAArM,EAAoO,oB,SC4DpO,EArDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdJ,GAAW,GAFG,UAGSK,EAAAA,EAAAA,IAAaJ,GAHtB,gBAGNK,EAHM,EAGNA,KACRR,EAAQQ,GAJM,gDAMdC,QAAQC,IAAR,MANc,yBAQdR,GAAW,GARG,4EAAH,qDAYfI,GACD,GAAE,CAACH,IAEAF,EACK,aAGJF,GAAwB,IAAhBA,EAAKY,QAKhB,gBAAKC,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGd,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,gBAAaN,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXM,IAAKJ,EACLK,IAAKH,EAAY,wCAAoCA,G,6iYAEvD,cAAGL,UAAWC,EAAd,SAA6BE,KAC7B,cAAGH,UAAWC,EAAd,SAAkCG,MAP3BE,EADD,SANP,cAAGN,UAAWC,EAAd,SAAyB,iBAoBnC,C,yLCrDKQ,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qIAGoBN,EAASO,IAH7B,+CAGK7B,EAHL,EAGKA,KAHL,kBAIIA,EAAK8B,SAJT,2HAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,kFACCa,EADD,iBACmBb,GADnB,kBAGoBG,EAASO,IAAIG,GAHjC,uBAGKhC,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BW,GAA5B,kFACCa,EADD,iBACmBb,EADnB,8BAGoBG,EAASO,IAAIG,GAHjC,uBAGKhC,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,kFACCa,EADD,iBACmBb,EADnB,8BAGoBG,EAASO,IAAIG,GAHjC,uBAGKhC,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAekC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCH,EADD,8BACgCG,GADhC,kBAGoBb,EAASO,IAAIG,GAHjC,uBAGKhC,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listImg\":\"cast_listImg__tVnM6\",\"list\":\"cast_list__bULim\",\"listItem\":\"cast_listItem__Km70l\",\"listName\":\"cast_listName__6beV9\",\"listCharacter\":\"cast_listCharacter__oFnba\",\"listWrap\":\"cast_listWrap__U34ca\",\"error\":\"cast_error__hduCn\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from '../../services/api';\nimport css from './cast.module.css';\nimport PropTypes from 'prop-types';\n\nimport userImg from '../../img/user.jpg';\n\nconst Cast = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const { cast } = await getMovieCast(movieId);\n        setData(cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (loading) {\n    return 'Loading...';\n  }\n\n  if (!data || data.length === 0) {\n    return <p className={css.error}>No data found</p>;\n  }\n\n  return (\n    <div className={css.listWrap}>\n      <ul className={css.list}>\n        {data.map(({ name, character, profile_path, id }) => (\n          <li key={id} className={css.listItem}>\n            <img\n              className={css.listImg}\n              alt={name}\n              src={profile_path ? `https://image.tmdb.org/t/p/w92${profile_path}` : userImg}\n            />\n            <p className={css.listName}>{name}</p>\n            <p className={css.listCharacter}>{character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number,\n};\n\nexport default Cast;\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9760321e535cf92cb2afc4cf5f8389d8',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["useState","data","setData","loading","setLoading","movieId","useParams","useEffect","fetchData","getMovieCast","cast","console","log","length","className","css","map","name","character","profile_path","id","alt","src","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","results","getMovieDetails","query","getMovieReviews","searchMovie","queryString"],"sourceRoot":""}