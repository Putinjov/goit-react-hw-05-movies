{"version":3,"file":"static/js/23.128d880d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/movies.module.css?e50d","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"movies_title__t3k-B\",\"wrap\":\"movies_wrap__5d+tB\",\"movieForm\":\"movies_movieForm__ALCDW\",\"movieInput\":\"movies_movieInput__io3TT\",\"btn\":\"movies_btn__wCcxe\",\"list\":\"movies_list__ZyEjX\",\"listItem\":\"movies_listItem__7Wz5X\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovie } from '../../services/api';\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const [query, setQuery] = useState(() => searchQuery || '');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await searchMovie(searchQuery);\n        setData(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (searchQuery) {\n      getData();\n    }\n  }, [searchQuery]);\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams({ query: query });\n  };\n\n  let content = null;\n\n  if (!searchQuery) {\n    content = <p className={css.descr}>Please enter a search query</p>;\n  } else if (loading) {\n    content = 'Loading...';\n  } else if (data.length > 0) {\n    content = data.map(({ title, id }) => (\n      <li key={id} className={css.listItem}>\n        <Link state={{ from: location }} to={`/movies/${id}`}>\n          {title}\n        </Link>\n      </li>\n    ));\n  } else {\n    content = (\n      <p className={css.descr}>\n        No movies with this title were found. Try entering another title\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <div className={css.wrap}>\n        <h2 className={css.title}>Search movies:</h2>\n        <form onSubmit={handleSubmit} className={css.movieForm}>\n          <input\n            value={query}\n            onChange={handleChange}\n            name=\"search\"\n            type=\"text\"\n            placeholder=\"Type here\"\n            className={css.movieInput}\n          />\n          <button type=\"submit\" className={css.btn}>\n            Search\n          </button>\n        </form>\n      </div>\n      <ul className={css.list}>{content}</ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9760321e535cf92cb2afc4cf5f8389d8',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["useState","data","setData","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","query","setQuery","location","useLocation","useEffect","getData","searchMovie","results","console","log","content","length","map","title","id","className","css","state","from","to","onSubmit","e","preventDefault","value","onChange","target","name","type","placeholder","instance","axios","baseURL","params","api_key","language","getTrendingMovies","getMovieDetails","getMovieCast","getMovieReviews","queryString"],"sourceRoot":""}